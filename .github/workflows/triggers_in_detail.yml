name: Triggers Details

run-name: Triggers Details ${{ github.run_number }}

on:

  # Manual run of workflow
  # Will be triggered only when the file is in default branch
  # Supports giving inputs to the workflow
  # Can be triggered from UI , CLI or API
  workflow_dispatch: 
    inputs:
      taskName:
        description: 'Task to do:'
        required: true
        default: 'Hello'
        type: choice
        options:
          - Hello
          - Bye
      message:
        description: 'Message to include in the deployment'
        required: true
        default: 'Mathi'
        type: string

  # schedule: #scheduled to run every friday in january
  # minute hour day month day_of_week
  # - cron: '0 0 * JAN FRI' 


  # push event runs on push to the repository
  # branches: can be used to include or exclude branches
  # to exclude branches using branches there is should atleast be one include branch beanch to specify exclude branch using branches. If purely exclude brnach use branches-ignore instead of branches
  # branches-ignore: can be used to exclude branches
  # branches-ignore: cannot be used with branches
  # paths: can be used to include or exclude files or folders
  # paths-ignore: cannot be used with paths similar to branches and branches-ignore
  # if both branches and paths are specified, the workflow will only run if both the branch and the path match the filter. If either the branch or the path does not match, the workflow will not run.
  push:
    branches:
      - main #include main branch
      - feature/*  #include feature branches
      - '!releases/**' 
    #branches-ignore: 
      #- 'releases/**' #exclude releases branches
    paths: #can be used to include or exclude files or folders. similar to branches there should be atleast one include path to specify exclude path with !.
      - 'src/**' #include src folder
      - '!src/ignore/**' #exclude src/ignore folder
    #paths-ignore:
      #- 'src/ignore/**' #exclude src/ignore folder
  
  #runs on pull request can use branches, branches-ignore, paths, paths-ignore similar to on push event
  pull_request: 
    types: [opened, closed]


# Jobs to run
# TestJob is the job id
# name is the name of the job
# runs-on is the runner to run the job

jobs:
  TestJob:
    name: Test Job Name
    runs-on: ubuntu-latest
    steps:
    - name: Test Step Manual and other triggers
      run: |
       if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
          if [ ${{ github.event.inputs.taskName }} == 'Hello' ]; then
            echo "Hello ${{ github.event.inputs.message }}"
          else
              echo "Bye  ${{ github.event.inputs.message }} "
          fi
        else
         echo "Hello triggered by ${{ github.event_name }}"
        fi

  TestJob2:
    name: Test Job Name 2
    runs-on: ubuntu-latest
    steps:
    - name: Run in parallel
      run: echo "Running in parallel"

  TestJob3:
    name: Test Job Name 3
    runs-on: ubuntu-latest
    needs: TestJob
    steps:
    - name: Run in series
      run: echo "Running only after the job specified in needs"

  TestJob4:
    name: Test Job Name 4
    runs-on: [ubuntu-22.04, ubuntu-24.04]
    needs: [TestJob, TestJob2]
    steps:
    - name: Print runner image and architecture
      run: echo "Running on ${{ runner.os }} ${{ runner.arch }}"
    - name: Run after TestJob and TestJob2
      run: echo "Running after the jobs specified in needs"
    - name: Try conditional steps
      if: ${{ always() }}
      run: |
        echo "SHELL is $SHELL"
        echo "This step will always run i.e) even when success ot failure"

  TestJob5:
    name: Container Test
    runs-on: ubuntu-latest
    container:
        image: ubuntu:latest
        env:
          MY_VAR: "Mathi"
    steps:
    - name: Run in container
      run: |
       echo "SHELL is $SHELL"
       echo "Hello $MY_VAR from inside a container"